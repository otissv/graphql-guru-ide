'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactUikitBase = require('react-uikit-base');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavItem = function NavItem(props) {
  // CSS classes
  var type = {
    divider: 'uk-nav-divider',
    header: 'uk-nav-header'
  };

  // Remove non valid html attributes
  var ignoreProps = ['active', 'body', 'children', 'classes', 'divder', 'header', 'href', 'kitid', 'parent', 'subtitle', 'type'];

  var cleanProps = _reactUikitBase.helpers.cleanProps(ignoreProps)(props);

  var cssClassNames = _reactUikitBase.helpers.cleanClasses([props.classes, props.active ? 'uk-active' : null, type[props.type] ? type[props.type] : null, props.parent ? 'uk-parent' : null, props.className]);

  // Elements
  var subtitle = props.subtitle ? _react2.default.createElement(
    'div',
    null,
    props.subtitle
  ) : null;

  var link = _react2.default.createElement(
    'a',
    {
      href: props.href,
      'data-kitid': props.kitid
    },
    props.body,
    subtitle
  );

  var component = {
    divider: _react2.default.createElement('li', _extends({}, cleanProps, {
      className: cssClassNames,
      'data-kitid': props.kitid
    })),

    header: _react2.default.createElement(
      'li',
      _extends({}, cleanProps, {
        className: cssClassNames,
        'data-kitid': props.kitid
      }),
      props.body
    ),

    link: _react2.default.createElement(
      'li',
      _extends({}, cleanProps, {
        className: cssClassNames,
        'data-kitid': props.kitid
      }),
      link,
      props.children
    ),

    item: _react2.default.createElement(
      'li',
      _extends({}, cleanProps, {
        className: cssClassNames,
        'data-kitid': props.kitid
      }),
      props.body,
      props.children
    )
  };

  // Return Component
  return component[props.type] || component['link'];
};

NavItem.propTypes = {
  active: _react2.default.PropTypes.bool,
  body: _react2.default.PropTypes.string,
  children: _react2.default.PropTypes.any,
  className: _react2.default.PropTypes.string,
  classes: _react2.default.PropTypes.array,
  divder: _react2.default.PropTypes.bool,
  header: _react2.default.PropTypes.bool,
  href: _react2.default.PropTypes.string,
  kitid: _react2.default.PropTypes.string,
  parent: _react2.default.PropTypes.bool,
  subtitle: _react2.default.PropTypes.string,
  type: _react2.default.PropTypes.oneOf(['divider', 'link', 'header', 'item'])
};

exports.default = (0, _reactUikitBase.base)(NavItem);