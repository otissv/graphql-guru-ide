'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactUikitBase = require('react-uikit-base');

var _reactUikitBase2 = _interopRequireDefault(_reactUikitBase);

var _ufunc = require('ufunc');

var _reactUikitButton = require('react-uikit-button');

var _reactUikitButton2 = _interopRequireDefault(_reactUikitButton);

var _comfirmButton = require('./comfirmButton');

var _comfirmButton2 = _interopRequireDefault(_comfirmButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Dialog = function Dialog(props) {
  // CSS classes
  var cssClassNames = _reactUikitBase2.default.helpers.cleanClasses(['uk-modal-dialog', props.blank ? 'uk-modal-dialog-blank uk-height-viewport' : null, props.large ? 'uk-modal-dialog-large' : null, props.lightbox ? 'uk-modal-dialog-lightbox' : null]);

  var closeCSSClasses = _reactUikitBase2.default.helpers.cleanClasses(['uk-modal-close uk-close', props.lightbox ? 'uk-close-alt' : null]);

  // Elements
  var caption = (0, _ufunc.maybeIf)(_react2.default.createElement(
    'div',
    { className: 'uk-modal-caption' },
    props.caption
  ))(props.caption);

  var close = (0, _ufunc.maybeIf)(_react2.default.createElement('a', {
    href: '#',
    className: closeCSSClasses,
    'data-kitid': props.kitid ? props.kitid : 'close-' + props.kitid,
    onClick: props.onClose
  }))(props.onClose);

  var confrim = function confrim(confirmObj, children) {
    return (0, _ufunc.either)(confirmObj && confirmObj.show ? confirmObj.dialog : children, children)(confirmObj);
  };

  var footer = function footer(children, right) {
    return (0, _ufunc.maybeIf)(_react2.default.createElement(
      'div',
      { className: right ? 'uk-modal-footer uk-text-right' : 'uk-modal-footer' },
      children
    ))(props.footer || props.type === 'alert' || props.type === 'prompt' || props.type === 'confirm');
  };

  var header = (0, _ufunc.maybeIf)(_react2.default.createElement(
    'div',
    { className: 'uk-modal-header' },
    _react2.default.createElement(
      'h2',
      null,
      props.header
    )
  ))(props.header);

  var type = {
    block: _react2.default.createElement(
      'div',
      {
        className: cssClassNames,
        'data-kitid': 'dialog-' + props.kitid
      },
      close,
      header,
      props.children,
      caption,
      footer(props.footer)
    ),

    alert: _react2.default.createElement(
      'div',
      {
        className: cssClassNames,
        'data-kitid': 'dialog-' + props.kitid
      },
      props.children,
      footer(_react2.default.createElement(_reactUikitButton2.default, _extends({ body: 'ok' }, props.ok)), true)
    ),

    prompt: _react2.default.createElement(
      'div',
      {
        className: cssClassNames + ' uk-form',
        'data-kitid': 'dialog-' + props.kitid
      },
      props.children,
      _react2.default.createElement('input', { 'data-kitid': 'input-' + props.kitid, type: 'text', className: 'uk-width-1-1' }),
      footer(_react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_reactUikitButton2.default, _extends({ kitid: 'ok-' + props.kitid, body: 'cancel', margin: 'right' }, props.cancel)),
        _react2.default.createElement(_reactUikitButton2.default, _extends({ kitid: 'cancel-' + props.kitid, body: 'ok' }, props.ok))
      ), true)
    ),

    confirm: _react2.default.createElement(
      'div',
      {
        className: cssClassNames + ' uk-form',
        'data-kitid': 'dialog-' + props.kitid
      },
      confrim(props.confirm, props.children),
      footer(_react2.default.createElement(_comfirmButton2.default, {
        ok: props.ok,
        cancel: props.cancel,
        confirm: props.confirm
      }), true)
    )
  };
  // if (props.confirm) console.log(props.confirm.show);

  // Return Component
  return type[props.type] || type['block'];
};

Dialog.propTypes = {
  blank: _react2.default.PropTypes.bool,
  cancel: _react2.default.PropTypes.object,
  caption: _react2.default.PropTypes.string,
  children: _react2.default.PropTypes.any,
  close: _react2.default.PropTypes.bool,
  confirm: _react2.default.PropTypes.object,
  footer: _react2.default.PropTypes.node,
  header: _react2.default.PropTypes.node,
  kitid: _react2.default.PropTypes.string,
  large: _react2.default.PropTypes.bool,
  lightbox: _react2.default.PropTypes.bool,
  onClose: _react2.default.PropTypes.func,
  ok: _react2.default.PropTypes.object,
  type: _react2.default.PropTypes.oneOf(['block', 'alert', 'prompt', 'confirm'])
};

exports.default = _reactUikitBase2.default.base(Dialog);