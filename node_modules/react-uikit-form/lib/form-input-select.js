'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactUikitIcons = require('react-uikit-icons');

var _reactUikitIcons2 = _interopRequireDefault(_reactUikitIcons);

var _cleanProps = require('./cleanProps');

var _cleanProps2 = _interopRequireDefault(_cleanProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FormInputSelect = function FormInputSelect(props) {
  var icon = _react2.default.createElement(_reactUikitIcons2.default, {
    icon: props.icon || 'caret-down',
    kitid: 'icon-' + props.kitid
  });

  var options = void 0;

  if (props.options) {
    options = props.options.map(function (item) {
      return _react2.default.createElement(
        'option',
        {
          key: item.value,
          value: item.value
        },
        item.body
      );
    });
  }

  var type = {
    button: _react2.default.createElement(
      'span',
      null,
      props.body,
      ' ',
      icon
    ),

    link: _react2.default.createElement(
      'a',
      null,
      props.body,
      ' ',
      icon
    ),

    span: _react2.default.createElement(
      'span',
      null,
      props.body,
      ' ',
      icon
    )
  };

  return _react2.default.createElement(
    'div',
    {
      className: props.type === 'button' ? 'uk-button uk-form-select' : 'uk-form-select',
      'data-kitid': props.kitid
    },
    type[props.type] || type.button,
    _react2.default.createElement(
      'select',
      _extends({}, (0, _cleanProps2.default)(props), { icon: null, type: 'select' }),
      options
    )
  );
};

FormInputSelect.propTypes = {
  body: _react2.default.PropTypes.string,
  icon: _react2.default.PropTypes.string,
  kitid: _react2.default.PropTypes.string,
  options: _react2.default.PropTypes.array,
  type: _react2.default.PropTypes.string
};

exports.default = FormInputSelect;