'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ufunc = require('ufunc');

var _formInputHelp = require('./form-input-help');

var _formInputHelp2 = _interopRequireDefault(_formInputHelp);

var _formInputControl = require('./form-input-control');

var _formInputControl2 = _interopRequireDefault(_formInputControl);

var _formLabel = require('./form-label');

var _formLabel2 = _interopRequireDefault(_formLabel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getLabelPosistion = function getLabelPosistion(label) {
  if (label) {
    return (0, _ufunc.either)('left', label.pos)(label.pos === undefined);
  }
};

var FormInputBase = function FormInputBase(props) {

  var help = (0, _ufunc.maybeIf)(_react2.default.createElement(_formInputHelp2.default, {
    help: props.help,
    kitid: 'help-' + props.kitid
  }))(props.help);

  var formInputControl = _react2.default.createElement(_formInputControl2.default, _extends({}, props.control, {
    display: props.display,
    input: props.input
  }));

  var row = _react2.default.createElement(
    'div',
    {
      className: props.display != null ? 'uk-display-' + props.display + ' uk-form-row' : 'uk-form-row'
    },
    getLabelPosistion(props.label) === 'left' ? _react2.default.createElement(_formLabel2.default, props) : null,
    (0, _ufunc.either)(formInputControl, props.input)(props.control),
    getLabelPosistion(props.label) === 'right' ? _react2.default.createElement(_formLabel2.default, props) : null,
    help
  );

  var component = void 0;
  if (props.label || props.help || props.row) {
    component = row;
  } else if (props.control) {
    component = formInputControl;
  } else {
    component = props.input;
  }

  // Return Component
  return component;
};

FormInputBase.propTypes = {
  control: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.object]),
  display: _react2.default.PropTypes.string,
  help: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object]),
  input: _react2.default.PropTypes.node,
  kitid: _react2.default.PropTypes.string,
  label: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object]),
  placeholder: _react2.default.PropTypes.string,
  row: _react2.default.PropTypes.bool
};

exports.default = FormInputBase;