'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactUikitBase = require('react-uikit-base');

var _reactUikitBase2 = _interopRequireDefault(_reactUikitBase);

var _formInput = require('./form-input');

var _formInput2 = _interopRequireDefault(_formInput);

var _cleanProps = require('./cleanProps');

var _cleanProps2 = _interopRequireDefault(_cleanProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getChildren(props) {
  if (props.children && props.layout) {
    if (Array.isArray(props.children)) {
      return _react2.default.Children.map(props.children, function (child) {
        return _extends({}, child, {
          props: _extends({}, child.props, {
            row: props.layout ? true : null,
            control: props.layout ? true : null
          })
        });
      });
    } else {
      return _extends({}, props.children, {
        props: _extends({}, props.children.props, {
          row: props.layout ? true : null,
          control: props.layout ? true : null
        })
      });
    }
  } else {
    return props.children;
  }
}

var Form = function Form(props) {
  // CSS classes
  var cssClassNames = _reactUikitBase2.default.helpers.cleanClasses(['uk-form', props.layout ? 'uk-form-' + props.layout : null, props.classes, props.className]);

  // Elements
  var items = void 0;
  if (props.items) {
    items = props.items.map(function (item, index) {
      return _react2.default.createElement(_formInput2.default, _extends({}, item, { key: item.kitid }));
    });
  }

  // Return Component
  return _react2.default.createElement(
    'form',
    _extends({}, (0, _cleanProps2.default)(props), {
      className: cssClassNames,
      'data-kitid': props.kitid
    }),
    _react2.default.createElement(
      'h3',
      null,
      props.title
    ),
    items,
    getChildren(props)
  );
};

Form.propTypes = {
  children: _react2.default.PropTypes.any,
  className: _react2.default.PropTypes.string,
  classes: _react2.default.PropTypes.array,
  layout: _react2.default.PropTypes.oneOf(['stacked', 'horizontal']),
  kitid: _react2.default.PropTypes.string,
  items: _react2.default.PropTypes.array,
  title: _react2.default.PropTypes.string
};

exports.default = _reactUikitBase2.default.base(Form);