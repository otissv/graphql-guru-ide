'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formInputMain = require('./form-input-main');

var _formInputMain2 = _interopRequireDefault(_formInputMain);

var _reactUikitIcons = require('react-uikit-icons');

var _reactUikitIcons2 = _interopRequireDefault(_reactUikitIcons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FormInputPassword = function FormInputPassword(props) {
  var icon = props.icon ? _react2.default.createElement(_reactUikitIcons2.default, {
    icon: props.icon || 'caret-down',
    kitid: 'icon-' + props.kitid
  }) : null;

  return _react2.default.createElement(
    'div',
    { className: 'uk-form-password' },
    _react2.default.createElement(_formInputMain2.default, _extends({}, props.input, { type: props.type || 'password' })),
    _react2.default.createElement(
      'a',
      {
        className: 'uk-form-password-toggle',
        onClick: props.onClick,
        'data-kitid': 'toggle-' + props.kitid
      },
      props.body,
      ' ',
      icon
    )
  );
};

FormInputPassword.propTypes = {
  body: _react2.default.PropTypes.string,
  kitid: _react2.default.PropTypes.string,
  icon: _react2.default.PropTypes.string,
  input: _react2.default.PropTypes.object,
  onClick: _react2.default.PropTypes.func,
  show: _react2.default.PropTypes.bool,
  type: _react2.default.PropTypes.string
};

exports.default = FormInputPassword;