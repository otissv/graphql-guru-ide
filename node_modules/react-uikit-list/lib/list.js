'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactUikitBase = require('react-uikit-base');

var _reactUikitBase2 = _interopRequireDefault(_reactUikitBase);

var _ufunc = require('ufunc');

var _ufunc2 = _interopRequireDefault(_ufunc);

var _listItem = require('./list-item');

var _listItem2 = _interopRequireDefault(_listItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var List = function (_React$Component) {
  _inherits(List, _React$Component);

  function List() {
    _classCallCheck(this, List);

    return _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).apply(this, arguments));
  }

  _createClass(List, [{
    key: 'getItemId',
    value: function getItemId(index) {
      return 'item-' + index + '-' + this.props.kitid;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var props = this.props;

      // Remove non valid html attributes
      var ignoreProps = ['children', 'className', 'classes', 'description', 'items', 'horizontal', 'kitid', 'line', 'striped', 'selectable', 'space', 'type'];

      var cleanProps = _reactUikitBase2.default.helpers.cleanProps(ignoreProps)(props);

      // CSS classes
      var isLine = _ufunc2.default.either('uk-list-line', 'uk-description-list-line');
      var isHor = _ufunc2.default.maybeIf('uk-description-list-horizontal')(props.type === 'description');

      var cssClassNames = _reactUikitBase2.default.helpers.cleanClasses([props.type !== 'description' ? 'uk-list' : null, props.horizontal ? isHor : null, !props.line ? null : isLine(props.type !== 'description'), props.striped ? 'uk-list-striped' : null, props.space ? 'uk-list-space' : null, props.classes, props.className]);

      // Elements
      var link = function link(item, index) {
        return _react2.default.createElement(_listItem2.default, _extends({
          key: index
        }, item, {
          kitid: _this2.getItemId(index),
          selectable: props.selectable,
          onClick: props.onClick
        }));
      };

      var text = function text(item, index) {
        return _react2.default.createElement(_listItem2.default, {
          key: index,
          body: item,
          kitid: _this2.getItemId(index)
        });
      };

      var items = void 0;
      if (props.items) {
        items = props.items.map(function (item, index) {
          return _ufunc2.default.either(link(item, index), text(item, index))(item.href);
        });
      }

      var attr = _extends({}, cleanProps, _reactUikitBase2.default.events(cleanProps), {
        'data-kitid': props.kitid,
        className: cssClassNames
      });

      var type = {
        unorderd: _react2.default.createElement(
          'ul',
          attr,
          items,
          props.children
        ),

        ordered: _react2.default.createElement(
          'ol',
          attr,
          items,
          props.children
        ),

        description: _react2.default.createElement(
          'dl',
          attr,
          props.children
        )
      };

      // Return Component
      return type[props.type] || type['unorderd'];
    }
  }]);

  return List;
}(_react2.default.Component);

List.propTypes = {
  children: _react2.default.PropTypes.any,
  className: _react2.default.PropTypes.string,
  classes: _react2.default.PropTypes.array,
  description: _react2.default.PropTypes.string,
  items: _react2.default.PropTypes.array,
  horizontal: _react2.default.PropTypes.bool,
  kitid: _react2.default.PropTypes.string,
  line: _react2.default.PropTypes.bool,
  striped: _react2.default.PropTypes.bool,
  selectable: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.object]),
  space: _react2.default.PropTypes.bool,
  type: _react2.default.PropTypes.oneOf(['description', 'ordered', 'unorderd'])
};

exports.default = _reactUikitBase2.default.base(List);